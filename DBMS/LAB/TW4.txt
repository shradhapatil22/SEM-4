CREATE TABLE SALESMAN(
	SALESMAN_ID INTEGER,
	NAME VARCHAR(15),
	CITY VARCHAR(15),
	COMMISION FLOAT,
	PRIMARY KEY (SALESMAN_ID)
);

CREATE TABLE CUSTOMER(
	CUSTOMER_ID INTEGER,
	CUST_NAME VARCHAR(15),
	CITY VARCHAR(15),
	GRADE INTEGER,
	SALESMAN_ID INTEGER,
	PRIMARY KEY(CUSTOMER_ID),
	FOREIGN KEY(SALESMAN_ID) REFERENCES SALESMAN (SALESMAN_ID ) ON DELETE SET NULL
);

CREATE TABLE ORDERS(
	ORDER_NUMBER INTEGER,
	PURCHASE_AMOUNT INTEGER,
	ORDER_DATE DATE,
	CUSTOMER_ID INTEGER,
	SALESMAN_ID INTEGER,
	PRIMARY KEY(ORDER_NUMBER ),
	FOREIGN KEY(SALESMAN_ID) REFERENCES SALESMAN (SALESMAN_ID ) ON DELETE SET NULL,
	FOREIGN KEY(CUSTOMER_ID ) REFERENCES CUSTOMER (CUSTOMER_ID  ) ON DELETE SET NULL
);


SELECTION STATEMENTS

SELECT * FROM CUSTOMER;
SELECT * FROM SALESMAN;
SELECT * FROM ORDERS;

INSERTION STATEMENTS

INSERT INTO SALESMAN VALUES (&SALESMAN_ID,'&NAME','&CITY',&COMMISION);
INSERT INTO CUSTOMER VALUES (&CUSTOMER_ID ,'&CUST_NAME','&CITY',&GRADE,&SALESMAN_ID);
INSERT INTO ORDERS VALUES (&ORDER_NUMBER, &PURCHASE_AMOUNT ,'&ORDER_DATE', &CUSTOMER_ID ,&SALESMAN_ID );

Queries:
1)
SELECT COUNT(DISTINCT(CUSTOMER_ID )),GRADE FROM CUSTOMER
GROUP BY GRADE
HAVING GRADE>=(SELECT AVG(GRADE) FROM CUSTOMER WHERE CITY='BANGALORE');

2)
SELECT SALESMAN_ID, NAME FROM SALESMAN
WHERE SALESMAN_ID IN (SELECT SALESMAN_ID FROM CUSTOMER GROUP BY SALESMAN_ID HAVING COUNT(CUSTOMER_ID)>1);

3)
SELECT NAME, CUST_NAME FROM SALESMAN S, CUSTOMER C, ORDERS O
WHERE S.SALESMAN_ID=O.SALESMAN_ID AND O.CUSTOMER_ID =C.CUSTOMER_ID  AND PURCHASE_AMOUNT>4000;

4)
DELETE FROM SALESMAN WHERE SALESMAN_ID =1000;
